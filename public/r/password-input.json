{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "password-input",
  "type": "registry:ui",
  "dependencies": [
    "lucide-react"
  ],
  "registryDependencies": [
    "button",
    "input",
    "utils"
  ],
  "files": [
    {
      "path": "registry/components/password-input.tsx",
      "content": "\"use client\"\n\nimport { forwardRef, useState } from \"react\"\nimport { Eye, EyeClosed, X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\n\ntype InputProps = React.InputHTMLAttributes<HTMLInputElement>\n\nconst PasswordInput = forwardRef<HTMLInputElement, InputProps>(\n  ({ className, value, onChange, ...props }, ref) => {\n    const [showPassword, setShowPassword] = useState(false)\n    const hasValue = value && value.toString().length > 0\n    const disabled = props.disabled\n\n    return (\n      <div className=\"relative\">\n        <Input\n          placeholder=\"••••••••\"\n          type={showPassword ? \"text\" : \"password\"}\n          className={cn(\n            \"hide-password-toggle\",\n            hasValue && !disabled ? \"pr-18\" : \"pr-10\",\n            !showPassword ? \"tracking-[0.3em]\" : \"\",\n            className\n          )}\n          ref={ref}\n          value={value}\n          onChange={onChange}\n          {...props}\n        />\n\n        {hasValue && !disabled && (\n          <Button\n            type=\"button\"\n            variant=\"ghost\"\n            size=\"icon\"\n            className=\"text-muted-foreground absolute top-0 right-8 h-full hover:bg-transparent!\"\n            onClick={() => {\n              const event = {\n                target: { value: \"\" },\n              } as React.ChangeEvent<HTMLInputElement>\n              onChange?.(event)\n            }}\n          >\n            <X className=\"size-4\" />\n          </Button>\n        )}\n\n        <Button\n          type=\"button\"\n          variant=\"ghost\"\n          size=\"icon\"\n          className=\"text-muted-foreground absolute top-0 right-0 h-full hover:bg-transparent!\"\n          onClick={() => setShowPassword((prev) => !prev)}\n          disabled={disabled}\n        >\n          <span className=\"relative block size-4\">\n            <Eye\n              className={cn(\n                \"absolute inset-0 transition-all duration-200 ease-in-out\",\n                showPassword && !disabled\n                  ? \"scale-100 opacity-100\"\n                  : \"scale-90 opacity-0\"\n              )}\n            />\n            <EyeClosed\n              className={cn(\n                \"absolute inset-0 transition-all duration-200 ease-in-out\",\n                !showPassword || disabled\n                  ? \"scale-100 opacity-100\"\n                  : \"scale-90 opacity-0\"\n              )}\n            />\n          </span>\n          <span className=\"sr-only\">\n            {showPassword ? \"Hide password\" : \"Show password\"}\n          </span>\n        </Button>\n\n        <style>\n          {`\n            .hide-password-toggle::-ms-reveal,\n            .hide-password-toggle::-ms-clear {\n              visibility: hidden;\n              pointer-events: none;\n              display: none;\n            }\n          `}\n        </style>\n      </div>\n    )\n  }\n)\nPasswordInput.displayName = \"PasswordInput\"\n\nexport { PasswordInput }\n",
      "type": "registry:ui"
    }
  ]
}