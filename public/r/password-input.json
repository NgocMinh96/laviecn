{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "password-input",
  "type": "registry:ui",
  "dependencies": [
    "lucide-react"
  ],
  "registryDependencies": [
    "button",
    "input",
    "utils"
  ],
  "files": [
    {
      "path": "registry/components/password-input.tsx",
      "content": "\"use client\"\r\n\r\nimport { forwardRef, useState } from \"react\"\r\nimport { Eye, EyeClosed, X } from \"lucide-react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\nimport { Button } from \"@/components/ui/button\"\r\nimport { Input } from \"@/components/ui/input\"\r\n\r\ntype InputProps = React.InputHTMLAttributes<HTMLInputElement>\r\n\r\nconst PasswordInput = forwardRef<HTMLInputElement, InputProps>(\r\n  ({ className, value, onChange, ...props }, ref) => {\r\n    const [showPassword, setShowPassword] = useState(false)\r\n    const hasValue = value && value.toString().length > 0\r\n    const disabled = props.disabled\r\n\r\n    return (\r\n      <div className=\"relative\">\r\n        <Input\r\n          placeholder=\"••••••••\"\r\n          type={showPassword ? \"text\" : \"password\"}\r\n          className={cn(\r\n            \"hide-password-toggle tracking-[0.3em]\",\r\n            hasValue && !disabled ? \"pr-18\" : \"pr-10\",\r\n            className\r\n          )}\r\n          ref={ref}\r\n          value={value}\r\n          onChange={onChange}\r\n          {...props}\r\n        />\r\n\r\n        {hasValue && !disabled && (\r\n          <Button\r\n            type=\"button\"\r\n            variant=\"ghost\"\r\n            size=\"icon\"\r\n            className=\"text-muted-foreground absolute top-0 right-8 h-full hover:bg-transparent!\"\r\n            onClick={() => {\r\n              const event = {\r\n                target: { value: \"\" },\r\n              } as React.ChangeEvent<HTMLInputElement>\r\n              onChange?.(event)\r\n            }}\r\n          >\r\n            <X className=\"size-4\" />\r\n          </Button>\r\n        )}\r\n\r\n        <Button\r\n          type=\"button\"\r\n          variant=\"ghost\"\r\n          size=\"icon\"\r\n          className=\"text-muted-foreground absolute top-0 right-0 h-full hover:bg-transparent!\"\r\n          onClick={() => setShowPassword((prev) => !prev)}\r\n          disabled={disabled}\r\n        >\r\n          <span className=\"relative block size-4\">\r\n            <Eye\r\n              className={cn(\r\n                \"absolute inset-0 transition-all duration-200 ease-in-out\",\r\n                showPassword && !disabled\r\n                  ? \"scale-100 opacity-100\"\r\n                  : \"scale-90 opacity-0\"\r\n              )}\r\n            />\r\n            <EyeClosed\r\n              className={cn(\r\n                \"absolute inset-0 transition-all duration-200 ease-in-out\",\r\n                !showPassword || disabled\r\n                  ? \"scale-100 opacity-100\"\r\n                  : \"scale-90 opacity-0\"\r\n              )}\r\n            />\r\n          </span>\r\n          <span className=\"sr-only\">\r\n            {showPassword ? \"Hide password\" : \"Show password\"}\r\n          </span>\r\n        </Button>\r\n\r\n        <style>\r\n          {`\r\n            .hide-password-toggle::-ms-reveal,\r\n            .hide-password-toggle::-ms-clear {\r\n              visibility: hidden;\r\n              pointer-events: none;\r\n              display: none;\r\n            }\r\n          `}\r\n        </style>\r\n      </div>\r\n    )\r\n  }\r\n)\r\nPasswordInput.displayName = \"PasswordInput\"\r\n\r\nexport { PasswordInput }\r\n",
      "type": "registry:ui"
    }
  ]
}