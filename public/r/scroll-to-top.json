{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "scroll-to-top",
  "type": "registry:component",
  "dependencies": [
    "motion",
    "lucide-react"
  ],
  "files": [
    {
      "path": "registry/components/scroll-to-top.tsx",
      "content": "\"use client\"\r\n\r\nimport { useEffect, useState } from \"react\"\r\nimport { ChevronUp } from \"lucide-react\"\r\nimport { motion } from \"motion/react\"\r\n\r\ntype ScrollToTopProps = { size?: number }\r\n\r\nexport default function ScrollToTop({ size = 44 }: ScrollToTopProps) {\r\n  const [isVisible, setIsVisible] = useState(false)\r\n  const [offset, setOffset] = useState(0)\r\n\r\n  const stroke = 4\r\n  const center = size / 2\r\n  const r = center - stroke / 2\r\n  const circumference = 2 * Math.PI * r\r\n  const iconSize = size * 0.4\r\n  const iconTranslate = size * 0.3\r\n\r\n  useEffect(() => {\r\n    const handleScroll = () => {\r\n      const scrollTop = window.scrollY\r\n      const docHeight = document.documentElement.scrollHeight - window.innerHeight\r\n      const progress = Math.min(scrollTop / docHeight, 1)\r\n      setOffset(progress >= 0.999 ? 0 : circumference * (1 - progress))\r\n      setIsVisible(scrollTop > 100)\r\n    }\r\n\r\n    window.addEventListener(\"scroll\", handleScroll, { passive: true })\r\n    window.addEventListener(\"load\", handleScroll)\r\n    requestAnimationFrame(handleScroll)\r\n\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", handleScroll)\r\n      window.removeEventListener(\"load\", handleScroll)\r\n    }\r\n  }, [circumference])\r\n\r\n  const scrollToTop = () => window.scrollTo({ top: 0, behavior: \"smooth\" })\r\n\r\n  const svgStyle = \"fixed bottom-4 right-4 z-50 cursor-pointer transition-opacity duration-300\"\r\n  const visibleStyle = isVisible\r\n    ? \"opacity-100 pointer-events-auto\"\r\n    : \"opacity-0 pointer-events-none\"\r\n\r\n  return (\r\n    <svg\r\n      width={size}\r\n      height={size}\r\n      viewBox={`0 0 ${size} ${size}`}\r\n      onClick={scrollToTop}\r\n      className={`${svgStyle} ${visibleStyle}`}\r\n      aria-label=\"Scroll to top\"\r\n    >\r\n      <circle\r\n        cx={center}\r\n        cy={center}\r\n        r={r}\r\n        transform={`rotate(-90 ${center} ${center})`}\r\n        style={{ fill: \"var(--scroll-top-bg)\", stroke: \"var(--scroll-top-track)\", strokeWidth: 2 }}\r\n      />\r\n      <motion.circle\r\n        cx={center}\r\n        cy={center}\r\n        r={r}\r\n        transform={`rotate(-90 ${center} ${center})`}\r\n        style={{ fill: \"none\", stroke: \"var(--scroll-top)\", strokeWidth: 2 }}\r\n        strokeDasharray={circumference}\r\n        strokeDashoffset={isNaN(offset) ? 0 : offset}\r\n      />\r\n      <g transform={`translate(${iconTranslate}, ${iconTranslate})`}>\r\n        <ChevronUp size={iconSize} color=\"var(--scroll-top)\" strokeWidth={3} />\r\n      </g>\r\n    </svg>\r\n  )\r\n}\r\n",
      "type": "registry:component"
    }
  ],
  "cssVars": {
    "light": {
      "scroll-top": "oklch(0.55 0.01 286)",
      "scroll-top-bg": "oklch(0.55 0.01 286 / 10%)",
      "scroll-top-track": "oklch(0.55 0.01 286 / 20%)"
    },
    "dark": {
      "scroll-top": "oklch(0.92 0 286)",
      "scroll-top-bg": "oklch(0.92 0 286 / 10%)",
      "scroll-top-track": "oklch(0.92 0 286 / 20%)"
    }
  }
}