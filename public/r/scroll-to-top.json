{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "scroll-to-top",
  "type": "registry:component",
  "dependencies": [
    "motion",
    "lucide-react"
  ],
  "files": [
    {
      "path": "registry/components/scroll-to-top.tsx",
      "content": "\"use client\"\n\nimport { ChevronUp } from \"lucide-react\"\nimport { motion } from \"motion/react\"\nimport { useEffect, useState } from \"react\"\n\ntype ScrollToTopProps = { size?: number }\n\nexport default function ScrollToTop({ size = 44 }: ScrollToTopProps) {\n  const [isVisible, setIsVisible] = useState(false)\n  const [offset, setOffset] = useState(0)\n\n  const stroke = 4\n  const center = size / 2\n  const r = center - stroke / 2\n  const circumference = 2 * Math.PI * r\n  const iconSize = size * 0.4\n  const iconTranslate = size * 0.3\n\n  useEffect(() => {\n    const handleScroll = () => {\n      const scrollTop = window.scrollY\n      const docHeight = document.documentElement.scrollHeight - window.innerHeight\n      const progress = Math.min(scrollTop / docHeight, 1)\n      setOffset(progress >= 0.999 ? 0 : circumference * (1 - progress))\n      setIsVisible(scrollTop > 100)\n    }\n\n    window.addEventListener(\"scroll\", handleScroll, { passive: true })\n    window.addEventListener(\"load\", handleScroll)\n    requestAnimationFrame(handleScroll)\n\n    return () => {\n      window.removeEventListener(\"scroll\", handleScroll)\n      window.removeEventListener(\"load\", handleScroll)\n    }\n  }, [circumference])\n\n  const scrollToTop = () => window.scrollTo({ top: 0, behavior: \"smooth\" })\n\n  const svgStyle = \"fixed bottom-4 right-4 z-50 cursor-pointer transition-opacity duration-300\"\n  const visibleStyle = isVisible\n    ? \"opacity-100 pointer-events-auto\"\n    : \"opacity-0 pointer-events-none\"\n\n  return (\n    <svg\n      width={size}\n      height={size}\n      viewBox={`0 0 ${size} ${size}`}\n      onClick={scrollToTop}\n      className={`${svgStyle} ${visibleStyle}`}\n      aria-label=\"Scroll to top\"\n    >\n      <circle\n        cx={center}\n        cy={center}\n        r={r}\n        transform={`rotate(-90 ${center} ${center})`}\n        style={{ fill: \"var(--scroll-top-bg)\", stroke: \"var(--scroll-top-track)\", strokeWidth: 2 }}\n      />\n      <motion.circle\n        cx={center}\n        cy={center}\n        r={r}\n        transform={`rotate(-90 ${center} ${center})`}\n        style={{ fill: \"none\", stroke: \"var(--scroll-top-progress)\", strokeWidth: 2 }}\n        strokeDasharray={circumference}\n        strokeDashoffset={offset}\n      />\n      <g transform={`translate(${iconTranslate}, ${iconTranslate})`}>\n        <ChevronUp size={iconSize} color=\"var(--scroll-top-progress)\" strokeWidth={3} />\n      </g>\n    </svg>\n  )\n}\n",
      "type": "registry:component"
    }
  ],
  "cssVars": {
    "theme": {
      "scroll-top-color": "var(--scroll-top-color)",
      "scroll-top-progress": "rgb(var(--scroll-top-color))",
      "scroll-top-bg": "rgb(var(--scroll-top-color), 0.1)",
      "scroll-top-track": "rgb(var(--scroll-top-color), 0.2)"
    },
    "light": {
      "scroll-top-color": "115, 115, 115"
    },
    "dark": {
      "scroll-top-color": "228, 228, 231"
    }
  }
}